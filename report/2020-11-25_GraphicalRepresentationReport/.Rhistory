(
crossovers_raw$pos.leftbound < max(windows$endWin) &
crossovers_raw$pos.rightbound> min(windows$startWin)
), ]
crossovers_raw_subset$eventID<-rownames(crossovers_raw_subset)
crossovers_raw_subset<-reshape2::melt(crossovers_raw_subset, id.vars = c( "chr", "donor", "eventID" ))
crossovers_raw_subset<-merge(crossovers_raw_subset, unique(windows[,c("Individual", "Genotype", "samples")]), by.x = "donor", by.y = "Individual")
View(crossovers_raw_subset)
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(aes(x = Inf, y = -Inf, label = samples))+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(aes(x = -Inf, y = Inf, label = samples))+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples")]), aes(x = -Inf, y = Inf, label = samples))+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples))+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples), nudge_x = 1, nudge_y = -1)+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples), nudge_x = 10, nudge_y = -1)+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples), hjust = 1 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples), hjust = -1 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples), hjust = -0.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples), hjust = -0.5, vjust = 0.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples), hjust = -0.5, vjust = -0.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples), hjust = -0.5, vjust = 1 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_colour_viridis_b()
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_colour_viridis_a()
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_colour_viridis_c()
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_colour_viridis_d()
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))#+
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_colour_viridis_c()
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_color_brewer(palette = "spectral")
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_color_brewer(palette = "Spectral")
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_color_brewer(palette = "YlGnBu")
library(viridis)
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_color_viridis()
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_color_continuous_sequential(palette = "Viridis", begin = 0.15, end = 0.9)
install.packages("colorspace")
install.packages("colorspace")
library(colorspace)
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_color_continuous_sequential(palette = "Viridis", begin = 0.15, end = 0.9)
require("ggpubr")
require("reshape2")
library("ggplot2")
require("data.table")
require("knitr")
require("stringr")
library("kableExtra")
require("gridExtra")
library("ggh4x")
# Example: how to store figure
# plotname<- "report/2020-11-25_GraphicalRepresentationReport/lineplot.200k.small.png"
# png(filename=plotname, width = 3508/5, height = 2480/3, units = "px" )
# plot<- annotate_figure(lineplot, top = text_grob(paste0("Log2 transformed fold changes between het. and homo in 3 groups" ), size = 10) )
# print(plot)
# dev.off()
library(viridis)
library(colorspace)
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_color_continuous_sequential(palette = "Viridis", begin = 0.15, end = 0.9)
require(colorspace)
remove.packages("colorspace")
require(colorspace)
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_color_continuous_sequential(palette = "Viridis", begin = 0.15, end = 0.9)
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_color_continuous_sequential(palette = "Viridis", begin = 0.1, end =1)
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_color_continuous_sequential(palette = "Viridis", begin = 0, end =1)
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_color_continuous_sequential(palette = "Viridis", begin = 0.05, end =1)
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_color_continuous_sequential(palette = "Viridis", begin = 0.1, end =1)
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_color_continuous_sequential(palette = "Viridis", begin = 0.07, end =1)
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_color_continuous_sequential(palette = "Viridis", begin = 0.09, end =1)
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_color_continuous_sequential(palette = "Viridis", begin = 0, end =1)
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_color_continuous_sequential(palette = "Viridis", begin = 0.05, end =1)
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_color_continuous_sequential(palette = "Viridis", begin = 0.05, end =1) +
ggtitle( paste0("Crossover events around ", inversion) )
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_color_continuous_sequential(palette = "Viridis", begin = 0.05, end =1) +
ggtitle( paste0("Crossover events around ", inversion) )+
theme(legend.position = "top", axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank()))
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_color_continuous_sequential(palette = "Viridis", begin = 0.05, end =1) +
ggtitle( paste0("Crossover events around ", inversion) )+
theme(legend.position = "top", axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_color_continuous_sequential(palette = "Viridis", begin = 0.05, end =1) +
ggtitle( paste0("Crossover events around ", inversion) )+
theme( axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_color_continuous_sequential(palette = "Viridis", begin = 0.05, end =1) +
ggtitle( paste0("Crossover events around ", inversion) )+
theme(legend.position = "bottom", axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank(),
legend.text = element_text(size = 5),
legend.key.size = unit(0.5, "line"),
legend.margin =margin(t=0.5,b=0.5))
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_color_continuous_sequential(palette = "Viridis", begin = 0.05, end =1) +
ggtitle( paste0("Crossover events around ", inversion) )+
theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank(),
legend.text = element_text(size = 5),
legend.key.size = unit(0.5, "line"),
legend.margin =margin(t=0.5,b=0.5))
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_color_continuous_sequential(palette = "Viridis", begin = 0.05, end =1) +
ggtitle( paste0("Crossover events around ", inversion) )+
theme(legend.position = "top", axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank(),
legend.text = element_text(size = 5),
legend.key.size = unit(0.5, "line"),
legend.margin =margin(t=0.5,b=0.5))
ggplot(crossovers_raw_subset ) +
geom_line(aes(x = value, y = eventID, color = samples))+
geom_text(data = unique(crossovers_raw_subset[,c("donor", "samples", "Genotype")]), aes(x = -Inf, y = Inf, label = samples, color = samples), hjust = -0.2, vjust = 1.5 )+
facet_nested(Genotype+donor~., scales = "free")+
geom_vline(aes(xintercept = coordinates$start))+
geom_vline(aes(xintercept = coordinates$end))+
geom_vline(aes(xintercept =min(windows$startWin)))+
geom_vline(aes(xintercept =  max(windows$endWin)))+
scale_color_continuous_sequential(palette = "Viridis", begin = 0.05, end =1) +
ggtitle( paste0("Crossover events around ", inversion) )+
theme(
axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank(),
legend.text = element_text(size = 6),
legend.key.size = unit(0.5, "line"),
legend.margin =margin(t=0.5,b=0.5),
legend.title = element_text(size = 7))
panoramiHetHomPlot<-function(testTT){
plotlist<-list()
for(inversion in unique(testTT$Inversion)){
test.subset<-testFT[testFT$Inversion == inversion,]
test.subset<-reshape2::melt(test.subset, id.vars=c("startWin", "endWin", "Inversion", "side"),  measure.vars = c("Heterozygous.cM.Mb.QN", "Homozygous.cM.Mb.QN") , variable.name = "Zygosity",value.name =  "cM.Mb.QN")
test.subset$Zygosity<-ifelse( test.subset$Zygosity == "Heterozygous.cM.Mb.QN", "Heterozygous", "Homozygous")
plotlist[[inversion]]<-ggplot(test.subset)+
geom_rect(aes(xmin=startWin, xmax=endWin, ymin = 0, ymax = cM.Mb.QN  )) +
facet_wrap(Zygosity ~ ., labeller = label_wrap_gen(multi_line=FALSE)) +
geom_rect(data = test.subset[test.subset$side == "inv",], aes(xmin=startWin, xmax=endWin, ymin = 0, ymax = cM.Mb.QN, fill = Zygosity))+
scale_fill_manual(values = c("#edae49", "#66a182"))+
ggtitle(inversion) +
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank(), legend.position = "none")
}
return(plotlist)
}
plotlist<-panoramiHetHomPlot(testTT)
# printplot
# plotname<- "report/2020-10-05_analysisNormalizedData/images/allinvs.b.200k.png"
# png(filename=plotname, width = 3508, height = 2480, units = "px" )
# plot<-
annotate_figure( ggarrange(plotlist=plotlist[1:8], common.legend = TRUE), top = text_grob(paste0("Quantile normalized recombination rates (Zygosity means)" )) )
# printplot
# plotname<- "report/2020-10-05_analysisNormalizedData/images/allinvs.b.200k.png"
# png(filename=plotname, width = 3508, height = 2480, units = "px" )
# plot<-
annotate_figure( ggarrange(plotlist=plotlist[1:8], common.legend = TRUE, ncol = 2), top = text_grob(paste0("Quantile normalized recombination rates (Zygosity means)" )) )
grid.arrange(plotlist=plotlist[1:8], common.legend = TRUE, ncol = 2)
# printplot
# plotname<- "report/2020-10-05_analysisNormalizedData/images/allinvs.b.200k.png"
# png(filename=plotname, width = 3508, height = 2480, units = "px" )
# plot<-
annotate_figure( grid.arrange(plotlist=plotlist[1:8], common.legend = TRUE, ncol = 2), top = text_grob(paste0("Quantile normalized recombination rates (Zygosity means)" )) )
ggarrange(plotlist=plotlist[1:8], common.legend = TRUE)
# printplot
# plotname<- "report/2020-10-05_analysisNormalizedData/images/allinvs.b.200k.png"
# png(filename=plotname, width = 3508, height = 2480, units = "px" )
# plot<-
annotate_figure( ggarrange(plotlist=plotlist[1:8], common.legend = TRUE, ncol = 2, nrow = 4), top = text_grob(paste0("Quantile normalized recombination rates (Zygosity means)" )) )
plotlist[["HsInv0325"]]
plotlist[[c("HsInv0325", "HsInv0501")]]
plotlist[c("HsInv0325", "HsInv0501")]
sizeComp
View(coordinates)
View(invsizes)
View(invinfo)
invinfo[order(invinfo$Size)]
invinfo[order(invinfo$Size),]
tail(invinfo[order(invinfo$Size),"Inversion"])
tail(invinfo[order(invinfo$Size),"Inversion"],8)
annotate_figure( ggarrange(plotlist=plotlist[tail(invinfo[order(invinfo$Size),"Inversion"],8)], common.legend = TRUE, ncol = 2, nrow = 4), top = text_grob(paste0("Quantile normalized recombination rates (Zygosity means)" )) )
View(normGenoData)
View(normGenoData)
View(testTT)
unique(testTT[order(testTT$Size),"Inversion"])
tail(unique(testTT[order(testTT$Size),"Inversion"])8)
tail(unique(testTT[order(testTT$Size),"Inversion"]),8)
invstoPlot<-tail(unique(testTT[order(testTT$Size),"Inversion"]),8)
annotate_figure( ggarrange(plotlist=plotlist[invstoPlot], common.legend = TRUE, ncol = 2, nrow = 4), top = text_grob(paste0("Quantile normalized recombination rates (Zygosity means)" )) )
View(testTT)
View(testTT)
invstoPlot<-tail(unique(testTT[order(testTT$Size),"Inversion"]),2)
annotate_figure( ggarrange(plotlist=plotlist[invstoPlot], ncol = 1, common.legend = TRUE), top = text_grob(paste0("Quantile normalized recombination rates" )) )
